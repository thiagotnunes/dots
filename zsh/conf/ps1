autoload -U colors
colors

autoload -Uz vcs_info

setopt PROMPT_SUBST

# Colors
RESET_COLOR=%{$reset_color%}
FG_GREEN=%{$fg[green]%}
FG_RED=%{$fg[red]%}
FG_BLUE=%{$fg[blue]%}
BG_RED=%{$bg[red]%}

# Misc
NEWLINE=$'\n'

# Right prompt
DATE="%D{%G-%m-%d}"
TIME="%D{%H:%M:%S}"
RPROMPT="${DATE} ${FG_RED}${TIME} ${RESET_COLOR}"

# Zshell vcs information
zstyle ':vcs_info:*' stagedstr 'M' 
zstyle ':vcs_info:*' unstagedstr 'M' 
zstyle ':vcs_info:*' check-for-changes true
zstyle ':vcs_info:*' actionformats '[%F{2}%b%F{3}|%F{1}%a]%f'
zstyle ':vcs_info:*' formats '%F{2}(%b) %F{2}%c%F{3}%u%%f'
zstyle ':vcs_info:(sv[nk]|bzr):*' branchformat '%F{2}%b%f%r'
zstyle ':vcs_info:git*+set-message:*' hooks git-untracked
zstyle ':vcs_info:*' enable git
+vi-git-untracked() {
  if [[ $(git rev-parse --is-inside-work-tree 2> /dev/null) == 'true' ]] && [[ $(git ls-files --other --directory --exclude-standard | sed q | wc -l | tr -d ' ') == 1 ]] ; then
    hook_com[unstaged]+='%F{1}??%f'
  fi
}

# Displays git information, like branch
function git_information() {
  vcs_info
  if [ -n "$vcs_info_msg_0_" ]; then
    echo "${vcs_info_msg_0_}${RESET_COLOR}"
  fi
}

# Displays last command with color according to status code
function last_command() {
  local last_command_exit=$?
  local history="`history -n 1 | tail -n 1`"
  if [ $last_command_exit -eq 0 ]; then
    echo "${RESET_COLOR}${FG_BLUE}[${history}]${RESET_COLOR}"
  else
    echo "${RESET_COLOR}${BG_RED}[${history}]${RESET_COLOR}"
  fi
}
USER="${FG_RED}%n${RESET_COLOR}"
CURRENT_DIR="%~"
COMMAND_SEPARATOR="${FG_GREEN}âˆ´ ${RESET_COLOR}"

PS1='${USER} $(last_command) $(git_information) ${CURRENT_DIR}${NEWLINE}${COMMAND_SEPARATOR}'
