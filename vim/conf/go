" vim: syntax=vim

" Jumps to next error
map <C-n> :cnext<CR>
" Jumps to previous error
map <C-n> :cprevious<CR>
" Closes errors
map <leader>a :cclose<CR>
" Runs go program
autocmd FileType go nmap <leader>r <Plug>(go-run)
" Runs tests
autocmd FileType go nmap <leader>t  <Plug>(go-test)
" run :GoBuild or :GoTestCompile based on the go file
function! s:build_go_files()
  let l:file = expand('%')
  if l:file =~# '^\f\+_test\.go$'
    call go#test#Test(0, 1)
  elseif l:file =~# '^\f\+\.go$'
    call go#cmd#Build(0)
  endif
endfunction

autocmd FileType go nmap <leader>b :<C-u>call <SID>build_go_files()<CR>

" uses goimports on save
let g:go_fmt_command = "goimports"

" highlighting
let g:go_highlight_types = 1
let g:go_highlight_fields = 1
let g:go_highlight_functions = 1
let g:go_highlight_function_calls = 1
let g:go_highlight_operators = 1
let g:go_highlight_extra_types = 1
let g:go_highlight_build_constraints = 1

" represents tabs as 2 spaces
autocmd BufNewFile,BufRead *.go setlocal noexpandtab tabstop=2 shiftwidth=2 

" show function parameter types
autocmd FileType go nmap <Leader>i <Plug>(go-info)

let g:go_auto_type_info = 1

